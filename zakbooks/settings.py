"""
Django settings for zakbooks project.

Generated by 'django-admin startproject' using Django 5.2.
"""

from pathlib import Path
import pymysql
pymysql.install_as_MySQLdb()
import os

BASE_DIR = Path(__file__).resolve().parent.parent

SECRET_KEY = 'django-insecure-ot6*my2x4g8bcpa-tt4yq!)dwp7%rudmb@k)&+0l#=sd3jqf&('

DEBUG = False  # ⚠️ En production, toujours False

ALLOWED_HOSTS = [
    'projet1-production-e398.up.railway.app',
    '127.0.0.1',
    'localhost',
]

CSRF_TRUSTED_ORIGINS = [
    "https://projet1-production-e398.up.railway.app",
]

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'BibloApp',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',  # ✅ sert les fichiers statiques en prod
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'zakbooks.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            BASE_DIR / "templates",
            BASE_DIR / "BibloApp" / "templates",
            # Ne pas mettre BASE_DIR / "static" ici, ce n’est pas un dossier de templates
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'BibloApp.books.categories_processor',
            ],
        },
    },
]

WSGI_APPLICATION = 'zakbooks.wsgi.application'

LOGIN_URL = '/login/'
LOGOUT_REDIRECT_URL = '/login/'

# Static files (CSS, JavaScript, Images)
STATIC_URL = '/static/'

# Dossiers où Django va chercher les fichiers statiques pendant dev
STATICFILES_DIRS = [
    BASE_DIR / "static",
    BASE_DIR / "BibloApp" / "static",
]

# Dossier où collectstatic copie les fichiers pour la prod
STATIC_ROOT = BASE_DIR / "staticfiles"

# Configuration de WhiteNoise pour servir les fichiers statiques
STATICFILES_STORAGE = 'whitenoise.storage.CompressedStaticFilesStorage'

# Activer le debug pour les fichiers statiques si DEBUG est True
if DEBUG:
    WHITENOISE_USE_FINDERS = True
    WHITENOISE_AUTOREFRESH = True
    WHITENOISE_MANIFEST_STRICT = False

# Media files (uploads utilisateurs)
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# Base de données SQLite (à changer en prod si nécessaire)
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# Validation mots de passe
AUTH_PASSWORD_VALIDATORS = [
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'},
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'},
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'},
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'},
]

# Internationalisation
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
